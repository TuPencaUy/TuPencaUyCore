// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TuPencaUy.Site.DAO.Models.Data;

#nullable disable

namespace TuPencaUy.Site.DAO.Migrations
{
    [DbContext(typeof(SiteDbContext))]
    partial class SiteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PermissionRole", b =>
                {
                    b.Property<int>("PermissionsId")
                        .HasColumnType("int");

                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.HasKey("PermissionsId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("PermissionRole");
                });

            modelBuilder.Entity("TuPencaUy.Core.DAO.BaseEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Comission")
                        .HasColumnType("float")
                        .HasColumnName("Comission")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("EndDate")
                        .HasColumnOrder(3);

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<bool>("Instantiable")
                        .HasColumnType("bit")
                        .HasColumnName("Instantiable")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Name")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("StartDate")
                        .HasColumnOrder(2);

                    b.Property<int?>("TeamType")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("UserEmail");

                    b.ToTable("BaseEvent");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("TuPencaUy.Site.DAO.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date")
                        .HasColumnOrder(5);

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("FirstTeamScore")
                        .HasColumnType("int")
                        .HasColumnName("FirstTeamScore")
                        .HasColumnOrder(3);

                    b.Property<int?>("FirstTeam_id")
                        .HasColumnType("int")
                        .HasColumnName("FirstTeam")
                        .HasColumnOrder(1);

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SecondTeamScore")
                        .HasColumnType("int")
                        .HasColumnName("SecondTeamScore")
                        .HasColumnOrder(4);

                    b.Property<int?>("SecondTeam_id")
                        .HasColumnType("int")
                        .HasColumnName("SecondTeam")
                        .HasColumnOrder(2);

                    b.Property<int?>("Sport_id")
                        .HasColumnType("int")
                        .HasColumnName("Sport")
                        .HasColumnOrder(6);

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("FirstTeam_id");

                    b.HasIndex("SecondTeam_id");

                    b.HasIndex("Sport_id");

                    b.ToTable("Match", (string)null);
                });

            modelBuilder.Entity("TuPencaUy.Site.DAO.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Description")
                        .HasColumnOrder(2);

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Name")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("Permission", (string)null);
                });

            modelBuilder.Entity("TuPencaUy.Site.DAO.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Name")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("TuPencaUy.Site.DAO.Models.Sport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("ExactPoints")
                        .HasColumnType("int")
                        .HasColumnName("ExactPoints")
                        .HasColumnOrder(3);

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Name")
                        .HasColumnOrder(1);

                    b.Property<int?>("PartialPoints")
                        .HasColumnType("int")
                        .HasColumnName("PartialPoints")
                        .HasColumnOrder(4);

                    b.Property<bool>("Tie")
                        .HasColumnType("bit")
                        .HasColumnName("Tie")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Sport", (string)null);
                });

            modelBuilder.Entity("TuPencaUy.Site.DAO.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Logo")
                        .HasMaxLength(50)
                        .HasColumnType("varbinary(50)")
                        .HasColumnName("Logo")
                        .HasColumnOrder(2);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Name")
                        .HasColumnOrder(1);

                    b.Property<int?>("Sport_id")
                        .HasColumnType("int")
                        .HasColumnName("Sport")
                        .HasColumnOrder(3);

                    b.Property<int?>("TeamType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Sport_id");

                    b.ToTable("Team", (string)null);
                });

            modelBuilder.Entity("TuPencaUy.Site.DAO.Models.User", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Email")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Name")
                        .HasColumnOrder(1);

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Password")
                        .HasColumnOrder(3);

                    b.Property<int?>("roleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleId")
                        .HasColumnOrder(4);

                    b.HasKey("Email");

                    b.HasIndex("EventId");

                    b.HasIndex("roleId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("TuPencaUy.Site.DAO.Models.Event", b =>
                {
                    b.HasBaseType("TuPencaUy.Core.DAO.BaseEvent");

                    b.ToTable("Event", (string)null);
                });

            modelBuilder.Entity("PermissionRole", b =>
                {
                    b.HasOne("TuPencaUy.Site.DAO.Models.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TuPencaUy.Site.DAO.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TuPencaUy.Core.DAO.BaseEvent", b =>
                {
                    b.HasOne("TuPencaUy.Site.DAO.Models.User", null)
                        .WithMany("Events")
                        .HasForeignKey("UserEmail");
                });

            modelBuilder.Entity("TuPencaUy.Site.DAO.Models.Match", b =>
                {
                    b.HasOne("TuPencaUy.Site.DAO.Models.Event", null)
                        .WithMany("Matches")
                        .HasForeignKey("EventId");

                    b.HasOne("TuPencaUy.Site.DAO.Models.Team", "FirstTeam")
                        .WithMany()
                        .HasForeignKey("FirstTeam_id");

                    b.HasOne("TuPencaUy.Site.DAO.Models.Team", "SecondTeam")
                        .WithMany()
                        .HasForeignKey("SecondTeam_id");

                    b.HasOne("TuPencaUy.Site.DAO.Models.Sport", "Sport")
                        .WithMany()
                        .HasForeignKey("Sport_id");

                    b.Navigation("FirstTeam");

                    b.Navigation("SecondTeam");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("TuPencaUy.Site.DAO.Models.Sport", b =>
                {
                    b.HasOne("TuPencaUy.Site.DAO.Models.Event", null)
                        .WithMany("Sports")
                        .HasForeignKey("EventId");
                });

            modelBuilder.Entity("TuPencaUy.Site.DAO.Models.Team", b =>
                {
                    b.HasOne("TuPencaUy.Site.DAO.Models.Sport", "Sport")
                        .WithMany()
                        .HasForeignKey("Sport_id");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("TuPencaUy.Site.DAO.Models.User", b =>
                {
                    b.HasOne("TuPencaUy.Site.DAO.Models.Event", null)
                        .WithMany("Users")
                        .HasForeignKey("EventId");

                    b.HasOne("TuPencaUy.Site.DAO.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("roleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TuPencaUy.Site.DAO.Models.Event", b =>
                {
                    b.HasOne("TuPencaUy.Core.DAO.BaseEvent", null)
                        .WithOne()
                        .HasForeignKey("TuPencaUy.Site.DAO.Models.Event", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TuPencaUy.Site.DAO.Models.User", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("TuPencaUy.Site.DAO.Models.Event", b =>
                {
                    b.Navigation("Matches");

                    b.Navigation("Sports");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
